package com.sndj;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.plugin.Plugin;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import java.math.BigDecimal;
import java.sql.*;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.LockSupport;

/**
 * @author yuechao 2018/7/30
 */
public class ConnTest {

    Connection conn = null;

    @Before
    public void setUp() throws Exception {
        Properties properties = Resources.getResourceAsProperties("jdbc.properties");
        Class.forName((String) properties.get("driver"));

        conn = DriverManager.getConnection((String) properties.get("url"),
                (String) properties.get("username"), (String) properties.get("password"));


    }

    @Test
    public void testReadOnly() throws Exception {
        conn.setReadOnly(true);
        System.out.println(conn.getCatalog());
        System.out.println(conn.isReadOnly());
        try (PreparedStatement ps = conn.prepareStatement("update country set contrycode = \"sh\" where id = 5 ")) {
            int updateCount = ps.executeUpdate();
            System.out.println(updateCount);
        }
    }

    @Test
    public void testCatalog() throws SQLException {
        conn.setCatalog("concert");
        try (Statement statement = conn.createStatement();) {
            statement.execute("select * from country");
            ResultSet rs = statement.getResultSet();
            while (rs.next()) {
                System.out.println(rs.getInt(4));
            }
            rs.close();
            conn.close();
        }
    }

    @Test
    public void testTransactionIsolation() throws SQLException {
        System.out.println(conn.getTransactionIsolation());
        System.out.println(conn.getMetaData().supportsTransactionIsolationLevel(Connection.TRANSACTION_NONE)); //0
        System.out.println(conn.getMetaData().supportsTransactionIsolationLevel(Connection.TRANSACTION_READ_UNCOMMITTED)); //1
        System.out.println(conn.getMetaData().supportsTransactionIsolationLevel(Connection.TRANSACTION_READ_COMMITTED)); //2
        System.out.println(conn.getMetaData().supportsTransactionIsolationLevel(Connection.TRANSACTION_REPEATABLE_READ)); //4
        System.out.println(conn.getMetaData().supportsTransactionIsolationLevel(Connection.TRANSACTION_SERIALIZABLE)); //8
        System.out.println(conn.getMetaData().getDefaultTransactionIsolation());
    }

    @Test
    public void testHoldability () throws SQLException {
        System.out.println(conn.getHoldability());
        System.out.println(conn.getMetaData().getResultSetHoldability());
    }

    @Test
    public void testGetWarnings() throws SQLException {
        SQLWarning sqlWarning = conn.getWarnings();
        while (null != sqlWarning) {
            System.out.println(sqlWarning);
            sqlWarning = sqlWarning.getNextWarning();
        }
    }

    @Test
    public void testAutoGeneratedKeys() throws SQLException {
//        PreparedStatement ps = conn.prepareStatement("INSERT INTO key_incre(kName, kHeight) values (?, ?)",
//                new int[]{9});
        PreparedStatement ps = conn.prepareStatement("INSERT INTO key_incre(kName, kHeight) values (?, ?)",
                new String[]{"kid"});
        ps.setString(1, "NCE");
        ps.setBigDecimal(2, new BigDecimal("12.34"));
        System.out.println(ps.executeUpdate());;
        ResultSet rs = null;
         rs = ps.getGeneratedKeys();
        while (rs.next()) {
            System.out.println(rs.getInt(1));
        }
//        rs = ps.getResultSet();
//        while (rs.next()) {
//            System.out.println("==>" + rs.getInt(1));
//        }
    }

    @Test
    public void testGetTypeMap() throws SQLException {
        System.out.println(conn.getTypeMap());
    }

    @Test
    public void testClientInfo() throws SQLException {
        System.out.println(conn.getNetworkTimeout());
        System.out.println(conn.getSchema());
        System.out.println(conn.getClientInfo());
        ResultSet rs = conn.getMetaData().getClientInfoProperties();
        while (rs.next()) {
            System.out.print(rs.getString("NAME"));
            System.out.print(rs.getInt("MAX_LEN"));
            System.out.print(rs.getString("DEFAULT_VALUE"));
            System.out.print(rs.getString("DESCRIPTION"));
            System.out.println();

        }
    }

    @Test
    public void test() throws IOException, ClassNotFoundException, SQLException {
        {
            try (PreparedStatement ps = conn.prepareStatement("select * from country");) {


                ps.execute();
                BeanC beanC = new BeanC();
                BeanB beanB = (BeanB) Plugin.wrap(beanC, new SampleResultSetHandlerInterceptor());
                beanB.test(ps);




                System.out.println(conn.isClosed());

            }
        }
    }
}





